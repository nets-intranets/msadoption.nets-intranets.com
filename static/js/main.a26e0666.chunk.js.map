{"version":3,"sources":["logo.svg","components/responsivePlayer.js","App.js","reportWebVitals.js","index.js"],"names":["ResponsivePlayer","state","url","pip","playing","controls","light","volume","muted","played","loaded","duration","playbackRate","loop","seconds","handleProgress","secs","console","log","setState","parseFloat","handlePlay","handlePause","handlePlayPause","handleSeekChange","e","target","value","ref","player","this","className","style","display","id","onClick","width","height","onPlay","onPause","onProgress","playedSeconds","Component","App","Player","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAAe,I,oEC4GAA,E,4MAvGbC,MAAQ,CACNC,IAAK,KACLC,KAAK,EACLC,SAAS,EACTC,UAAU,EACVC,OAAO,EACPC,OAAQ,GACRC,OAAO,EACPC,OAAQ,EACRC,OAAQ,EACRC,SAAU,EACVC,aAAc,EACdC,MAAM,EACNC,QAAS,G,EAGXC,eAAiB,SAACC,GAChBC,QAAQC,IAAI,aAAcF,GAE1B,EAAKG,SAAS,CAAEL,QAASE,IACzBC,QAAQC,IAAI,OAAQ,EAAKjB,MAAMa,SAC3BM,WAAWJ,GAAQ,IAAMI,WAAWJ,GAAQ,IAC9C,EAAKG,SAAS,CAAEf,SAAS,K,EAM7BiB,WAAa,WACXJ,QAAQC,IAAI,UACZ,EAAKC,SAAS,CAAEf,SAAS,K,EAG3BkB,YAAc,WACZL,QAAQC,IAAI,WACZ,EAAKC,SAAS,CAAEf,SAAS,K,EAG3BmB,gBAAkB,WAChB,EAAKJ,SAAS,CAAEf,SAAU,EAAKH,MAAMG,W,EAEvCoB,iBAAmB,SAACC,GAClB,EAAKN,SAAS,CAAEV,OAAQW,WAAWK,EAAEC,OAAOC,U,EAE9CC,IAAM,SAACC,GACL,EAAKA,OAASA,G,4CAEhB,WAAU,IAAD,SAeHC,KAAK7B,MAZPG,GAHK,EAELF,IAFK,EAGLE,SAHK,EAILC,SAJK,EAKLC,MALK,EAMLC,OANK,EAOLC,MAPK,EAQLK,KARK,EASLJ,OATK,EAULC,OAVK,EAWLC,SAXK,EAYLC,aAZK,EAaLE,QAbK,EAcLX,IAIF,OACE,sBAAK4B,UAAU,MAAf,UACE,qBACEC,MACEZ,WAAWU,KAAK7B,MAAMa,SAAW,IACjCM,WAAWU,KAAK7B,MAAMa,SAAW,GAC7B,CAAEmB,QAAS,QACX,GAENC,GAAG,iBAPL,SASE,wBACEP,MAAM,KACNQ,QAC4CL,KAAKP,gBAHnD,4BASF,qBAAKQ,UAAU,iBAAf,SACE,cAAC,IAAD,CACEH,IAAKE,KAAKF,IACVG,UAAU,eACV7B,IAAI,YACJkC,MAAM,OACNC,OAAO,OACPC,OAAQR,KAAKT,WACbkB,QAAST,KAAKR,YACdjB,UAAU,EACVD,QAASA,EACToC,WAAY,SAACf,GAAD,OAAO,EAAKV,eAAeU,EAAEgB,2B,GAjGtBC,aCOhBC,MALf,WACE,IAAMC,EAAS5C,EACf,OAAO,cAAC4C,EAAD,KCIMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a26e0666.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from \"react\";\r\nimport ReactPlayer from \"react-player\";\r\nimport \"./responsive-player.css\";\r\n\r\nclass ResponsivePlayer extends Component {\r\n  state = {\r\n    url: null,\r\n    pip: false,\r\n    playing: true,\r\n    controls: false,\r\n    light: false,\r\n    volume: 0.8,\r\n    muted: false,\r\n    played: 0,\r\n    loaded: 0,\r\n    duration: 0,\r\n    playbackRate: 1.0,\r\n    loop: false,\r\n    seconds: 0,\r\n  };\r\n\r\n  handleProgress = (secs) => {\r\n    console.log(\"onProgress\", secs);\r\n\r\n    this.setState({ seconds: secs });\r\n    console.log(\"secs\", this.state.seconds);\r\n    if (parseFloat(secs) > 10 && parseFloat(secs) < 11) {\r\n      this.setState({ playing: false });\r\n    }\r\n\r\n    // We only want to update time slider if we are not currently seeking\r\n  };\r\n\r\n  handlePlay = () => {\r\n    console.log(\"onPlay\");\r\n    this.setState({ playing: true });\r\n  };\r\n\r\n  handlePause = () => {\r\n    console.log(\"onPause\");\r\n    this.setState({ playing: false });\r\n  };\r\n\r\n  handlePlayPause = () => {\r\n    this.setState({ playing: !this.state.playing });\r\n  };\r\n  handleSeekChange = (e) => {\r\n    this.setState({ played: parseFloat(e.target.value) });\r\n  };\r\n  ref = (player) => {\r\n    this.player = player;\r\n  };\r\n  render() {\r\n    const {\r\n      url,\r\n      playing,\r\n      controls,\r\n      light,\r\n      volume,\r\n      muted,\r\n      loop,\r\n      played,\r\n      loaded,\r\n      duration,\r\n      playbackRate,\r\n      seconds,\r\n      pip,\r\n    } = this.state;\r\n    const SEPARATOR = \" Â· \";\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <div\r\n          style={\r\n            parseFloat(this.state.seconds) < 10 ||\r\n            parseFloat(this.state.seconds) > 11\r\n              ? { display: \"none\" }\r\n              : {}\r\n          }\r\n          id=\"button-overlay\"\r\n        >\r\n          <button\r\n            value=\"20\"\r\n            onClick={\r\n              ((value) => this.handleSeekChange(value), this.handlePlayPause)\r\n            }\r\n          >\r\n            more than 10\r\n          </button>\r\n        </div>\r\n        <div className=\"player-wrapper\">\r\n          <ReactPlayer\r\n            ref={this.ref}\r\n            className=\"react-player\"\r\n            url=\"video.mp4\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            onPlay={this.handlePlay}\r\n            onPause={this.handlePause}\r\n            controls={true}\r\n            playing={playing}\r\n            onProgress={(e) => this.handleProgress(e.playedSeconds)}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ResponsivePlayer;\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport ResponsivePlayer from \"./components/responsivePlayer\";\nimport React, { useState } from \"react\";\nimport ReactPlayer from \"react-player\";\n\nfunction App() {\n  const Player = ResponsivePlayer;\n  return <Player />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}